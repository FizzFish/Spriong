classPath:
  - src/main/resources/log4j-api-2.14.0.jar
  - src/main/resources/log4j-core-2.14.0.jar
  - logtest/target/classes
source:
  { className: "org.test.Main", method: "void main(java.lang.String[])" }
  #{ className: "org.apache.logging.log4j.spi.AbstractLogger", method: "<org.apache.logging.log4j.spi.AbstractLogger: void error(java.lang.String)>" }
sinks:
#  - { method: "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>", index: -1 }
#  - { method: "<javax.script.ScriptEngine: java.lang.Object eval(java.lang.String)>", index: 0 }
  - { method: "<javax.naming.Context: java.lang.Object lookup(java.lang.String)>", index: 0 }
#  - { method: "<org.apache.logging.log4j.core.lookup.StrSubstitutor: java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.String)>", index: 1 }
# kind: 0->pointer copy; 1->deep copy
# <init> donnot care about
transfers:
  - method: '<java.lang.String: java.lang.String concat(java.lang.String)>'
    transitions:
      - {from: -1, to: -2, kind: 0}
      - {from: 0, to: -2, kind: 0}
  - method: '<java.lang.String: void <init>(char[],int,int)>'
    transitions:
      - {from: 0, to: -1, kind: 0}
  - method: '<java.lang.String: java.lang.String substring(int,int)>'
    transitions:
      - {from: -1, to: -2, kind: 0}
  - method: '<java.lang.String: java.lang.String substring(int)>'
    transitions:
      - { from: -1, to: -2, kind: 0 }
  - method: '<java.lang.StringBuilder: java.lang.String substring(int,int)>'
    transitions:
      - { from: -1, to: -2, kind: 0 }
  - method: '<java.lang.String: void getChars(int,int,char[],int)>'
    transitions:
      - {from: -1, to: 2, kind: 1}
  - method: '<java.lang.StringBuilder: void getChars(int,int,char[],int)>'
    transitions:
        - { from: -1, to: 2, kind: 1 }
  - method: '<java.lang.StringBuilder: void <init>(java.lang.String)>'
    transitions:
        - {from: 0, to: -1, kind: 0}
  - method: '<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>'
    transitions:
      - {from: 0, to: -2, kind: 1}
      - {from: 0, to: -1, kind: 1}
  - method: '<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>'
    transitions:
      - { from: 0, to: -2, kind: 1 }
      - {from: 0, to: -1, kind: 1}
  - method: '<java.lang.String: java.lang.String[] split(java.lang.String)>'
    transitions:
      - {from: -1, to: -2, kind: 1}
  - method: '<java.lang.Class: java.lang.Class forName(java.lang.String)>'
    transitions:
      - {from: 0, to: -2, kind: 0}
  - method: '<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>'
    transitions:
      - {from: -1, to: -2, kind: 0}
  - method: '<java.lang.reflect.Method: java.lang.String getName()>'
    transitions:
      - {from: -1, to: -2, kind: 0}
  - method: '<java.lang.Class: java.lang.Object newInstance()>'
    transitions:
      - {from: -1, to: -2, kind: 0}
  - method: '<java.io.StringReader: void <init>(java.lang.String)>'
    transitions:
      - {from: 0, to: -1, kind: 0}
  - method: '<java.lang.StringBuffer: void <init>(java.lang.String)>'
    transitions:
      - {from: 0, to: -1, kind: 0}
  - method: '<java.lang.String: void <init>(java.lang.StringBuffer)>'
    transitions:
      - {from: 0, to: -1, kind: 0}
  - method: '<java.io.Reader: int read(char[],int,int)>'
    transitions:
      - {from: -1, to: 0, kind: 1}
  - method: '<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>'
    transitions:
      - {from: -1, to: -2, kind: 0}
  - method: '<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>'
    transitions:
      - {from: 0, to: -2, kind: 0}
  - method: '<java.util.regex.Matcher: java.lang.String group(int)>'
    transitions:
      - {from: -1, to: -2, kind: 0}
  - method: '<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>'
    transitions:
      - {from: -1, to: -2, kind: 0}
  - method: '<java.util.List: java.lang.Object remove(int)>'
    transitions:
      - { from: -1, to: -2, kind: 0 }